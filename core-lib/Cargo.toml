[package]
name = "cypheron-core"
version = "0.1.0"
edition = "2021"
build = "build.rs"
description = "Post-quantum cryptography library with NIST-standardized quantum-resistant algorithms"
license = "Apache-2.0"
repository = "https://github.com/CypheronLabs/Cypheron-core"
homepage = "https://cypheronlabs.com/"
documentation = "https://cypheronlabs.github.io/Cypheron-core/"
authors = ["Cypheron Labs"]
rust-version = "1.80"
keywords = ["post-quantum", "quantum-resistant", "cryptography", "pqc", "nist"]
categories = ["cryptography", "api-bindings"]
readme = "../README.md"
exclude = ["target/", "benchmarks/target/", "tests/fuzz/target/"]

[dependencies]
secrecy = "0.10.3"
thiserror = "2.0.12"
libc = "0.2.174"
zeroize = { version = "1.8.1", features = ["derive"] }
rand = "0.9.2"
once_cell = "1.21.3"
num_cpus = "1.17"
p256 = { version = "0.13.2", features = ["ecdsa", "sha256", "ecdh"] }
sha2 = "0.10.8"
hkdf = "0.12"
serde = { version = "1.0", features = ["derive"], optional = true }

[target.'cfg(target_os = "windows")'.dependencies]
windows = { version = "0.61.3", features = [
    "Win32_Security_Cryptography",
    "Win32_System_Memory",
    "Win32_System_SystemInformation",
] }

[target.'cfg(target_os = "macos")'.dependencies]
core-foundation = "0.10"
security-framework = "3.2"

[target.'cfg(target_os = "linux")'.dependencies]
# Linux uses standard libc, no additional dependencies needed

[build-dependencies]
cc = "1.2.30"
bindgen = "0.72.0"

[dev-dependencies]
cypheron-core = { path = "." }
serde_json = "1.0"
# Security testing dependencies
proptest = "1.7"
criterion = { version = "0.7", features = ["html_reports"] }
hex = "0.4"
# Note: dudect requires nightly features, added as optional for timing tests
# dudect = "0.4"  # Uncomment when using nightly Rust for side-channel testing

# Benchmark configurations moved to separate benchmarks crate


[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ["cfg(rust_analyzer)"] }

[lib]
crate-type = ["cdylib", "rlib"]

[features]
ml-kem-512 = []
ml-kem-768 = []
ml-kem-1024 = []
ml-kem = ["ml-kem-512", "ml-kem-768", "ml-kem-1024"]

ml-dsa-44 = []
ml-dsa-65 = []
ml-dsa-87 = []
ml-dsa = ["ml-dsa-44", "ml-dsa-65", "ml-dsa-87"]

falcon-512 = []
falcon-1024 = []
falcon = ["falcon-512", "falcon-1024"]

sphincs-sha2 = []
sphincs-shake = []
sphincs-haraka = []
sphincs = ["sphincs-sha2", "sphincs-shake", "sphincs-haraka"]

level1 = ["ml-kem-512", "falcon-512", "sphincs-sha2"]
level3 = ["ml-kem-768", "ml-dsa-65", "sphincs-haraka"]
level5 = ["ml-kem-1024", "ml-dsa-87", "falcon-1024"]

hybrid-kem = []
hybrid-sig = []
hybrid = ["hybrid-kem", "hybrid-sig"]

aesni = []
avx2 = []
simd = ["aesni", "avx2"]

platform-entropy = []
platform-info = []

serde = ["dep:serde"]
std = []
testing = []

balanced = ["ml-kem-768", "ml-dsa-44", "hybrid-kem"]
high-security = ["ml-kem-1024", "ml-dsa-87"]
low-latency = ["ml-kem-512", "ml-dsa-44"]

all-algorithms = ["ml-kem", "ml-dsa", "falcon", "sphincs"]
all-hybrids = ["hybrid"]

default = [
    "ml-kem-768",
    "ml-dsa-44",
    "hybrid-kem",
    "serde",
    "std",
    "platform-entropy",
    "platform-info"
]

kyber = ["ml-kem"]
dilithium = ["ml-dsa"]
derand = []  
