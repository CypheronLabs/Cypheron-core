name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  SKIP_VENDOR_INTEGRITY: 1

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      run: cargo fmt --all -- --check
      working-directory: core-lib
    
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
      working-directory: core-lib
    
    - name: Run tests
      run: cargo test --all-features --verbose
      working-directory: core-lib
    
    - name: Run benchmarks (compile only)
      run: cargo check --benches
      working-directory: benchmarks

  security:
    name: Security Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-security-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Run security tests
      run: |
        cargo test --test kat_tests --all-features
        cargo test --test crypto_properties --all-features
        cargo test --test timing_tests --all-features
        cargo test --test memory_safety_tests --all-features
        cargo test --test sidechannel_tests --all-features
      working-directory: core-lib

  publish-check:
    name: Publish Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-publish-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check if crate can be published
      run: cargo publish --dry-run
      working-directory: core-lib