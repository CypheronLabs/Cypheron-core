name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  SKIP_VENDOR_INTEGRITY: 1

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libclang-dev clang build-essential
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          core-lib/target
        key: ubuntu-cargo-${{ hashFiles('core-lib/Cargo.lock') }}
        restore-keys: |
          ubuntu-cargo-
    
    - name: Check formatting
      run: cargo fmt --all -- --check
      working-directory: core-lib
    
    - name: Build core library
      run: cargo build --lib
      working-directory: core-lib
    
    - name: Run core library tests
      run: cargo test --lib
      working-directory: core-lib

  release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build release library
      run: cargo build --release
      working-directory: core-lib

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: cypheron-core-${{ matrix.os }}
        path: |
          core-lib/target/release/libcypheron_core.so
          core-lib/target/release/cypheron_core.dll
          core-lib/target/release/libcypheron_core.dylib

  # security:
  #   name: Security Tests
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #   - uses: actions/checkout@v4
  #   
  #   - name: Install system dependencies
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install -y libclang-dev clang build-essential
  #   
  #   - name: Install Rust
  #     uses: dtolnay/rust-toolchain@stable
  #   
  #   - name: Cache cargo registry and build artifacts
  #     uses: actions/cache@v4
  #     with:
  #       path: |
  #         ~/.cargo/registry
  #         ~/.cargo/git
  #         core-lib/target
  #       key: ${{ runner.os }}-security-cargo-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml', 'core-lib/build.rs') }}
  #       restore-keys: |
  #         ${{ runner.os }}-security-cargo-
  #         ${{ runner.os }}-cargo-
  #   
  #   - name: Run security tests
  #     run: |
  #       cargo test kat_tests --all-features --timeout=300
  #       cargo test nist_compliance_tests --all-features --timeout=300
  #     working-directory: core-lib

  # publish-check:
  #   name: Publish Check
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #   - uses: actions/checkout@v4
  #   
  #   - name: Install system dependencies
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install -y libclang-dev clang build-essential
  #   
  #   - name: Install Rust
  #     uses: dtolnay/rust-toolchain@stable
  #   
  #   - name: Cache cargo registry and build artifacts
  #     uses: actions/cache@v4
  #     with:
  #       path: |
  #         ~/.cargo/registry
  #         ~/.cargo/git
  #         core-lib/target
  #       key: ${{ runner.os }}-publish-cargo-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml', 'core-lib/build.rs') }}
  #       restore-keys: |
  #         ${{ runner.os }}-publish-cargo-
  #         ${{ runner.os }}-cargo-
  #   
  #   - name: Check if crate can be published
  #     run: cargo publish --dry-run
  #     working-directory: core-lib